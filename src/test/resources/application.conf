
pekko {
  log-level = "DEBUG"

  actor {
    // serialize-messages = on

    debug {
      unhandled = on
      event-stream = on
    }

    serializers {
      jackson-json = "org.apache.pekko.serialization.jackson.JacksonJsonSerializer"
    }

    serialization-bindings {
      "devs.msg.DevsMessage" = "jackson-json"
      "devs.msg.time.SimTime" = "jackson-json"
    }
  }
  serialization.jackson {
    jackson-json {
      serialization-features {
        INDENT_OUTPUT = on
      }
    }

    jackson-modules += "com.fasterxml.jackson.datatype.jdk8.Jdk8Module"
    jackson-modules += "com.fasterxml.jackson.datatype.guava.GuavaModule"
  }
}

# kafka-cluster {
#   bootstrap.servers = "pkc-2396y.us-east-1.aws.confluent.cloud:9092"
#   security.protocol = SASL_SSL
#   sasl.jaas.config = "org.apache.kafka.common.security.plain.PlainLoginModule   required username='CBFAYGVGPNRXCBSY'   password='f7zgk7oHD86KUCX7/4qZWqbwSwesJjpG2BzIpHLwORKU95+CaHxkszg75vrLDNti';"
#   sasl.mechanism = PLAIN
# }

# kafka-readall-consumer: ${pekko.kafka.consumer} {
#   kafka-clients {
#     bootstrap.servers = "pkc-2396y.us-east-1.aws.confluent.cloud:9092"
#     security.protocol = SASL_SSL
#     sasl.jaas.config = "org.apache.kafka.common.security.plain.PlainLoginModule   required username='CBFAYGVGPNRXCBSY'   password='f7zgk7oHD86KUCX7/4qZWqbwSwesJjpG2BzIpHLwORKU95+CaHxkszg75vrLDNti';"
#     sasl.mechanism = PLAIN
#     enable.auto.commit = false
#     auto.offset.reset = earliest
#   }
# }

kafka-cluster {
  bootstrap.servers = "localhost:9092"
  security.protocol = PLAINTEXT
}

kafka-readall-consumer: ${pekko.kafka.consumer} {
  kafka-clients {
    bootstrap.servers = "localhost:9092"
    security.protocol = PLAINTEXT
    enable.auto.commit = false
    auto.offset.reset = earliest
  }
}

